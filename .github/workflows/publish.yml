name: Build APK with Versioning

on:
  push:
    branches:
      - master
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Gradlew executable
        run: chmod +x ./gradlew

      - name: Extract version from release
        if: ${{ github.event_name == 'release' }}
        run: echo "VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - name: Set default version
        if: ${{ github.event_name != 'release' }}
        run: echo "VERSION=development-${{ github.run_number }}" >> $GITHUB_ENV

      - name: Build the APK
        run: ./gradlew assembleRelease

      - name: Rename APK with version
        run: |
          VERSION=${{ env.VERSION }}
          APK_PATH=$(find app/build/outputs/apk/release -name "*.apk")
          mv "$APK_PATH" "app/build/outputs/apk/release/app-$VERSION.apk"

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: release-apk-${{ env.VERSION }}
          path: app/build/outputs/apk/release/app-${{ env.VERSION }}.apk
